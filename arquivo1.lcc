def func1 ( int A , int B )
{
  int SM [2];
  SM [0] = A + B ;
  SM [1] = B * C ;
  return ;
}

def principal ()
{
  int C ;
  int D ;
  int R ;
  C = 4;
  D = 5;
  R = call func1 (C , D );
  return ;
}

def func2 ( int A , int B )
{
  int SM [2];
  SM [0] = A / B ;
  SM [1] = B % C ;
  return ;
}

def principal2 ()
{
  int C ;
  int D ;
  int R ;
  C = 4;
  D = 5;
  R = call func1 (C , D );
  return ;
}

{
{
  float x;
  float z;
  int i;
  int max;
  x = 0;
  max = 10000;

  for (i = 1; i <= max; i = i + 1)
  {
    print x;
    x = x + 0.001;
    z = x;

    if (z != x){{
      print "Erro numérico na atribuição de números na notação ponto flutuante!";
      break;
    }}

  }
}


{
  int y;
  int j;
  int i;
  y = new int[10];
  j = 0;

  for (i = 0; i < 20; i = i + 1) 
  {
    if (i % 2 == 0)
    {
      y[j] = i + 1;
      j = j + 1;
    }
    else
    {
      print 0;
    }
  }

  for (i = 0; i < 10; i = i + 1)
  {
    print y[i];
  }

  return;
}
}




int fibonacci() { 
  int t1 = 0, t2 = 1, nextTerm = 0, n;
  print ("Enter a positive number: ");


  print ("Fibonacci Series: ");
  nextTerm = t1 + t2;

  while (nextTerm <= n) {
    print(nextTerm);
    t1 = t2;
    t2 = nextTerm;
    nextTerm = t1 + t2;
  }

  return 0;
}