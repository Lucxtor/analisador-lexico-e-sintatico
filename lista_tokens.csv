def
ident
(
int
ident
,
int
ident
)
{
for
(
ident
=
int_constant
;
ident
<
ident
;
ident
=
ident
+
int_constant
)
{
print
ident
[
ident
]
;
}
print
ident
;
}
def
ident
(
int
ident
,
int
ident
)
{
for
(
ident
=
int_constant
;
ident
<
ident
-
int_constant
;
ident
=
ident
+
int_constant
)
{
for
(
ident
=
int_constant
;
ident
<
ident
-
ident
-
int_constant
;
ident
=
ident
+
int_constant
)
{
if
(
ident
[
ident
]
>
ident
[
ident
]
)
{
ident
=
ident
[
ident
]
;
ident
[
ident
]
=
ident
[
ident
]
;
ident
[
ident
]
=
ident
;
}
}
}
}
def
ident
(
int
ident
,
int
ident
)
{
int
ident
;
for
(
ident
=
int_constant
;
ident
<
ident
;
ident
=
ident
+
int_constant
)
{
ident
=
ident
;
ident
=
ident
-
int_constant
;
{
ident
[
ident
]
=
ident
[
ident
]
;
ident
=
ident
-
int_constant
;
}
ident
[
ident
]
=
ident
;
}
}
def
ident
(
int
ident
,
int
ident
)
{
int
ident
;
for
(
ident
=
int_constant
;
ident
<
ident
-
int_constant
;
ident
=
ident
+
int_constant
)
{
ident
=
ident
;
for
(
ident
=
ident
+
int_constant
;
ident
<
ident
;
ident
=
ident
+
int_constant
)
{
if
(
ident
<
ident
)
{
ident
=
ident
;
}
}
ident
=
ident
;
ident
=
ident
;
ident
=
ident
;
}
}
def
ident
(
int
ident
,
int
ident
,
int
ident
)
{
int
ident
;
int
ident
;
for
(
ident
=
ident
;
ident
<=
ident
-
int_constant
;
ident
=
ident
+
int_constant
)
{
if
(
ident
<
ident
)
{
ident
=
ident
+
int_constant
;
ident
=
ident
;
ident
=
ident
;
ident
=
ident
;
}
}
ident
=
ident
;
ident
=
ident
;
ident
=
ident
;
}
def
ident
(
int
ident
,
int
ident
,
int
ident
)
{
if
(
ident
<
ident
)
{
ident
=
ident
;
}
}
{
int
ident
;
int
ident
;
print
string_constant
;
call
ident
(
ident
,
ident
)
;
call
ident
(
ident
,
ident
)
;
print
string_constant
;
call
ident
(
ident
,
ident
)
;
int
ident
=
{
int_constant
,
int_constant
,
int_constant
,
int_constant
,
int_constant
}
;
call
ident
(
ident
,
ident
)
;
print
string_constant
;
call
ident
(
ident
,
ident
)
;
int
ident
=
{
int_constant
,
int_constant
,
int_constant
,
int_constant
,
int_constant
}
;
call
ident
(
ident
,
ident
)
;
print
string_constant
;
call
ident
(
ident
,
ident
)
;
int
ident
=
{
int_constant
,
int_constant
,
int_constant
,
int_constant
,
int_constant
}
;
call
ident
(
ident
,
int_constant
,
ident
-
int_constant
)
;
print
string_constant
;
call
ident
(
ident
,
ident
)
;
return
int_constant
;
}
